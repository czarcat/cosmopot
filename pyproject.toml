p0-user-models-migration-pydantic-repo-tests
[project]
name = "user-service"
version = "0.1.0"
description = "User domain models, DTOs, and repositories"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "SQLAlchemy>=2.0",
    "pydantic>=2.4",
    "alembic>=1.12",
    "aiosqlite>=0.19",
    "pytest>=7.4",
    "pytest-asyncio>=0.23",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.mypy]
python_version = "3.11"
packages = ["user_service"]
warn_unused_configs = true
warn_unused_ignores = true
strict_optional = true
no_implicit_optional = true
warn_return_any = true
disallow_untyped_defs = true
check_untyped_defs = true
mypy_path = "src"

[tool.pydantic-mypy]
init_typed = true
warn_untyped_fields = true

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "backend"
version = "0.1.0"
description = "Backend service scaffolded with FastAPI, SQLAlchemy, and Alembic"
requires-python = ">=3.11"
readme = "README.md"
dependencies = [
  "fastapi>=0.104",
  "uvicorn[standard]>=0.23",
  "pydantic>=2.4",
  "pydantic-settings>=2.0",
  "sqlalchemy[asyncio]>=2.0",
  "asyncpg>=0.28",
  "alembic>=1.12",
  "structlog>=23.1",
  "orjson>=3.9",
  "greenlet>=3.0",
feat/auth-web-jwt-refresh-rotation-revocation-redis-rate-limit-argon2-tests
  "redis>=5.0",
  "argon2-cffi>=23.1",

main
  "PyJWT>=2.8",
]

[project.optional-dependencies]
dev = [
  "black>=23.9",
  "coverage[toml]>=7.3",
  "mypy>=1.5",
  "pytest>=7.4",
  "pytest-asyncio>=0.21",
  "pytest-cov>=4.1",
  "ruff>=0.1.5",
  "types-structlog>=0.6.0.7",
  "httpx>=0.24",
  "fakeredis>=2.19",
]

[tool.setuptools.package-dir]
"" = "apps/backend/src"

[tool.setuptools.packages.find]
where = ["apps/backend/src"]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff]
line-length = 88
target-version = "py311"
src = ["apps/backend/src", "apps/backend/tests"]

[tool.ruff.lint]
select = ["E", "F", "B", "Q", "I", "UP", "ASYNC"]
ignore = ["B008"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
strict = true
warn_unused_configs = true
mypy_path = ["apps/backend/src"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["apps/backend/tests"]
addopts = "-q --disable-warnings --maxfail=1 --cov=backend --cov-report=term-missing:skip-covered"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2
main
